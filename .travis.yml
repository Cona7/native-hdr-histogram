sudo: false

language: generic

git:
  depth: 10

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.5
    packages:
     - clang-3.5

# don't re-build for tags so that [publish binary] is not re-run
# https://github.com/travis-ci/travis-ci/issues/1532
branches:
  except:
    - /^v[0-9]/

matrix:
  include:
     # Linux
     - os: linux
       compiler: clang
       env: NODE_VERSION="6"
       addons:
         apt:
            sources: [ 'ubuntu-toolchain-r-test','llvm-toolchain-precise-3.5', 'gcc-multilib', 'g++-multilib']
            packages: [ 'clang-3.5']
     - os: linux
       compiler: clang
       env: NODE_VERSION="5"
       addons:
         apt:
            sources: [ 'ubuntu-toolchain-r-test','llvm-toolchain-precise-3.5', 'gcc-multilib', 'g++-multilib']
            packages: [ 'clang-3.5']
     - os: linux
       compiler: clang
       env: NODE_VERSION="4"
       addons:
         apt:
            sources: [ 'ubuntu-toolchain-r-test','llvm-toolchain-precise-3.5', 'gcc-multilib', 'g++-multilib']
            packages: [ 'clang-3.5']
     # OS X
     - os: osx
       compiler: clang
       env: NODE_VERSION="5" COVERAGE=true PUBLISHABLE=false # node abi 47
     - os: osx
       compiler: clang
       env: NODE_VERSION="6" # node abi 48
     - os: osx
       compiler: clang
       env: NODE_VERSION="5" # node abi 47
     - os: osx
       compiler: clang
       env: NODE_VERSION="4" # node abi 46

env:
  global:
    - JOBS: "8"
    - secure: <output from `travis encrypt node_pre_gyp_accessKeyId=${node_pre_gyp_accessKeyId}`>
    - secure: <output from `travis encrypt node_pre_gyp_secretAccessKey=${node_pre_gyp_secretAccessKey}`>

before_install:
- export PUBLISHABLE=${PUBLISHABLE:-true}
- if [[ $(uname -s) == 'Linux' ]]; then
    export CXX="clang++-3.5";
    export CC="clang-3.5";
    export PYTHONPATH=$(pwd)/py-local/lib/python2.7/site-packages;
  else
    export PYTHONPATH=$(pwd)/py-local/lib/python/site-packages;
  fi;
- scripts/validate_tag.sh
- source ./scripts/install_node.sh ${NODE_VERSION}

install:
# put node-pre-gyp on path
- export PATH=./node_modules/.bin/:$PATH

before_script:
# get commit message
- export COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')

script:
- if [[ "${NODE_VERSION}" ]]; then ./scripts/build_against_node.sh; fi;
